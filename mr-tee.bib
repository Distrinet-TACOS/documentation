@Misc{freertosmanual,
  author    = {Services, Amazon Web},
  title     = {The {{FreeRTOS}}\texttrademark{} Reference Manual},
  url       = {https://www.freertos.org/Documentation/RTOS\_book.html},
  publisher = {{Amazon.com, Inc.}},
  year      = {2017},
}

@InProceedings{wang2022rt,
  author    = {Wang, Jinwen and Li, Ao and Li, Haoran and Lu, Chenyang and Zhang, Ning},
  booktitle = {2022 {{IEEE}} Symposium on Security and Privacy ({{SP}})},
  title     = {{{RT-TEE}}: {{Real-time}} System Availability for Cyber-Physical Systems Using {{ARM TrustZone}}},
  doi       = {10.1109/sp46214.2022.9833604},
  pages     = {1573--1573},
  publisher = {{IEEE Computer Society}},
  year      = {2022},
}

@InProceedings{machiry2017boomerang,
  author    = {Machiry, Aravind and Gustafson, Eric and Spensky, Chad and Salls, Christopher and Stephens, Nick and Wang, Ruoyu and Bianchi, Antonio and Choe, Yung Ryn and Kruegel, Christopher and Vigna, Giovanni},
  booktitle = {Proceedings of the Network and Distributed Systems Security Symposium ({{NDSS}})},
  title     = {{{BOOMERANG}}: {{Exploiting}} the Semantic Gap in Trusted Execution Environments.},
  doi       = {10.14722/ndss.2017.23227},
  year      = {2017},
}

@Misc{costan2016intel,
  author       = {Victor Costan and Srinivas Devadas},
  title        = {Intel SGX Explained},
  howpublished = {Cryptology ePrint Archive, Paper 2016/086},
  url          = {https://eprint.iacr.org/2016/086},
  year         = {2016},
}

@Misc{platform2018introduction,
  author       = {{GlobalPlatform}},
  title        = {Introduction to Trusted Execution Environments},
  url          = {https://globalplatform.org/resource-publication/introduction-to-trusted-execution-environments/},
  lastaccessed = {October 13, 2022},
  month        = may,
  year         = {2018},
}

@InProceedings{suv-middleware,
  author    = {Daniels, Wilfried and Hughes, Danny and Ammar, Mahmoud and Crispo, Bruno and Matthys, Nelson and Joosen, Wouter},
  booktitle = {Proceedings of the 18th {{ACM}}/{{IFIP}}/{{USENIX}} Middleware Conference: {{Industrial}} Track},
  title     = {{{S\textmu V}} - the Security Microvisor: {{A}} Virtualisation-Based Security Middleware for the Internet of Things},
  doi       = {10.1145/3154448.3154454},
  isbn      = {978-1-4503-5200-0},
  pages     = {36--42},
  publisher = {{Association for Computing Machinery}},
  series    = {Middleware '17},
  url       = {https://doi.org/10.1145/3154448.3154454},
  address   = {{New York, NY, USA}},
  keywords  = {IoT,memory isolation,remote attestation,security},
  year      = {2017},
}

@InProceedings{grisafi2022pistis,
  author    = {Michele Grisafi and Mahmoud Ammar and Marco Roveri and Bruno Crispo},
  booktitle = {31st USENIX Security Symposium (USENIX Security 22)},
  title     = {{PISTIS}: Trusted Computing Architecture for Low-end Embedded Systems},
  isbn      = {978-1-939133-31-1},
  pages     = {3843--3860},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/usenixsecurity22/presentation/grisafi},
  address   = {Boston, MA},
  month     = {aug},
  year      = {2022},
}

@Article{nashimoto2020bypassing,
  author   = {Nashimoto, Shoei and Suzuki, Daisuke and Ueno, Rei and Homma, Naofumi},
  title    = {Bypassing Isolated Execution on {{RISC-V}} with Fault Injection},
  url      = {https://eprint.iacr.org/2020/1193},
  journal  = {Cryptology ePrint Archive},
  keywords = {⛔ No DOI found},
  year     = {2020},
}

@InProceedings{van2018foreshadow,
  author    = {Jo Van Bulck and Marina Minkin and Ofir Weisse and Daniel Genkin and Baris Kasikci and Frank Piessens and Mark Silberstein and Thomas F. Wenisch and Yuval Yarom and Raoul Strackx},
  booktitle = {27th USENIX Security Symposium (USENIX Security 18)},
  title     = {Foreshadow: Extracting the Keys to the Intel {SGX} Kingdom with Transient {Out-of-Order} Execution},
  isbn      = {978-1-939133-04-5},
  pages     = {991{\textendash}1008},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/usenixsecurity18/presentation/bulck},
  address   = {Baltimore, MD},
  month     = {aug},
  year      = {2018},
}

@InProceedings{pearl-tee,
  author    = {Huang, Wei and Rudchenko, Vasily and Shuang, He and Huang, Zhen and Lie, David},
  booktitle = {Proceedings of the 3rd Workshop on System Software for Trusted Execution},
  title     = {Pearl-{{TEE}}: {{Supporting}} Untrusted Applications in {{TrustZone}}},
  doi       = {10/gssrdm},
  isbn      = {978-1-4503-5998-6},
  pages     = {8--13},
  publisher = {{Association for Computing Machinery}},
  series    = {{{SysTEX}} '18},
  url       = {https://doi.org/10.1145/3268935.3268936},
  abstract  = {Rising concerns about mobile security have motivated the use of architectural features such as ARM TrustZone to protect sensitive applications from compromise by malicious applications or a compromised OS. However, many TEE OSes (which run in TrustZone) currently assume all applications in TrustZone are trusted, and thus do not provide strong isolation guarantees between them. The benefit of this is that TEE OSes can be simple, allowing them to provide a high-assurance trusted computing base (TCB). However, unlike how arbitrary third-party mobile applications can be installed onto a smartphone, the need for mutual trust among all applications running inside TrustZone prevents the installation of 3rd party applications on the TEE OS. In this paper, we identify the key properties that define application code that may wish to use TrustZone and show that a standard TEE OS can be extended to support multiple, mutually distrusting applications in TrustZone with less than a 3\% increase in the TCB. We realize our ideas in Pearl-TEE, a novel TEE OS prototype we have implemented that can provide mechanisms specific to the needs of TrustZone applications, including isolation for execution, secure persistent storage, and support for network communication. We find that Pearl-TEE imposes less than 20\% performance overhead on applications.},
  address   = {{New York, NY, USA}},
  keywords  = {{$\warning$}️ Invalid DOI,mobile security,secure operating system,trustzone},
  year      = {2018},
}

@Article{lin2022formal,
  author        = {Lin, Chen-Kai and Wang, Bow-Yaw},
  title         = {Analyzing {{FreeRTOS}} Scheduling Behaviors with the Spin Model Checker},
  doi           = {10.48550/arxiv.2205.07480},
  eprint        = {2205.07480},
  archiveprefix = {arXiv},
  copyright     = {Creative Commons Attribution 4.0 International},
  keywords      = {Formal Languages and Automata Theory (cs.FL),FOS: Computer and information sciences,Operating Systems (cs.OS)},
  primaryclass  = {cs.FL},
  publisher     = {{arXiv}},
  year          = {2022},
}

@Misc{montalbano_2021,
  author  = {Montalbano, Elizabeth},
  title   = {Florida Water Plant Hack: {{Leaked}} Credentials Found in Breach Database},
  url     = {https://threatpost.com/florida-water-plant-hack-credentials-breach/163919/},
  journal = {threatpost},
  month   = feb,
  year    = {2021},
}

@InProceedings{noorman2013sancus,
  author    = {Job Noorman and Pieter Agten and Wilfried Daniels and Raoul Strackx and Anthony Van Herrewege and Christophe Huygens and Bart Preneel and Ingrid Verbauwhede and Frank Piessens},
  booktitle = {22nd USENIX Security Symposium (USENIX Security 13)},
  title     = {Sancus: Low-cost Trustworthy Extensible Networked Devices with a Zero-software Trusted Computing Base},
  isbn      = {978-1-931971-03-4},
  pages     = {479--498},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/noorman},
  address   = {Washington, D.C.},
  month     = {aug},
  year      = {2013},
}

@InProceedings{janjua2019towards,
  author    = {Janjua, Hassaan and Ammar, Mahmoud and Crispo, Bruno and Hughes, Danny},
  booktitle = {Proceedings of the 4th Workshop on System Software for Trusted Execution},
  title     = {Towards a Standards-Compliant Pure-Software Trusted Execution Environment for Resource-Constrained Embedded Devices},
  doi       = {10.1145/3342559.3365338},
  isbn      = {978-1-4503-6888-9},
  publisher = {{Association for Computing Machinery}},
  series    = {{{SysTEX}} '19},
  url       = {https://doi.org/10.1145/3342559.3365338},
  abstract  = {Trusted execution environments (TEEs) are becoming a requirement to protect a wide range of platforms, from cloud servers to embedded sensors. In this paper, we take a first step towards providing a pure-software Trusted Execution Environment (TEE) for resource-constrained embedded devices that lack basic hardware-based security features, such as Memory Protection Units (MPUs). Our key instrument in providing the features of TEEs is a formally-verified software-based memory isolation technique called the Security MicroVisor (S{$\mu$}V), that serves as a programmable trusted layer, which provides isolation by policing and regulating the execution of assembly-level instructions. This paper contributes the first architecture of a pure software TEE that supports all of the features that have been standardized by the GlobalPlatform Organization. Our implementation and evaluation results demonstrate the feasibility of implementing a standards-compliant software-based TEE for low-end embedded devices without hardware support or modification that has proven security against all networked attacks.},
  address   = {{New York, NY, USA}},
  articleno = {6},
  year      = {2019},
}

@Misc{coremark,
  author       = {{EEMBC}},
  title        = {{{CPU}} Benchmark - {{MCU}} Benchmark - {{CoreMark}}},
  language     = {en},
  note         = {ZSCC: NoCitationData[s0]},
  url          = {https://www.eembc.org/coremark/},
  urldate      = {2023-09-28},
  abstract     = {The Embedded Microprocessor Benchmark Consortium},
  file         = {:- EEMBC.html:URL},
  lastaccessed = {October 13, 2022},
}

@Article{8723088,
  author  = {Kim, Sangjun and Won, Yuchang and Park, In-Hee and Eun, Yongsoon and Park, Kyung-Joon},
  title   = {Cyber-Physical Vulnerability Analysis of Communication-Based Train Control},
  doi     = {10.1109/jiot.2019.2919066},
  number  = {4},
  pages   = {6353--6362},
  volume  = {6},
  journal = {IEEE Internet of Things Journal},
  year    = {2019},
}

@Article{singh2021reliability,
  author    = {Singh, Pooja and Singh, Lalit Kumar},
  title     = {Reliability and Safety Engineering for Safety Critical Systems: {{An}} Interview Study with Industry Practitioners},
  doi       = {10.1109/tr.2021.3051635},
  number    = {2},
  pages     = {643--653},
  volume    = {70},
  journal   = {IEEE Transactions on Reliability},
  publisher = {{IEEE}},
  year      = {2021},
}

@Article{freertosverified,
  author     = {Cheng, Shu and Woodcock, Jim and D'Souza, Deepak},
  title      = {Using Formal Reasoning on a Model of Tasks for {{FreeRTOS}}},
  doi        = {10.1007/s00165-014-0308-9},
  issn       = {0934-5043},
  number     = {1},
  pages      = {167--192},
  url        = {https://doi.org/10.1007/s00165-014-0308-9},
  volume     = {27},
  abstract   = {FreeRTOS is an open-source real-time microkernel that has a wide community of users. We present the formal specification of the behaviour of the task part of FreeRTOS that deals with the creation, management, and scheduling of tasks using priority-based preemption. Our model is written in the Z notation, and we verify its consistency using the Z/Eves theorem prover. This includes a precise statement of the preconditions for all API commands. This task model forms the basis for three dimensions of further work: (a) the modelling of the rest of the behaviour of queues, time, mutex, and interrupts in FreeRTOS; (b) refinement of the models to code to produce a verified implementation; and (c) extension of the behaviour of FreeRTOS to multi-core architectures. We propose all three dimensions as benchmark challenge problems for Hoare's Verified Software Initiative.},
  address    = {{Berlin, Heidelberg}},
  issue_date = {Jan 2015},
  journal    = {Formal Aspects of Computing},
  keywords   = {formal verification,FreeRTOS,Verified software initiative,Z/Eves},
  month      = jan,
  publisher  = {{Springer-Verlag}},
  year       = {2015},
}

@InProceedings{sun2020oat,
  author    = {Sun, Zhichuang and Feng, Bo and Lu, Long and Jha, Somesh},
  booktitle = {2020 {{IEEE}} Symposium on Security and Privacy ({{SP}})},
  title     = {{{OAT}}: {{Attesting}} Operation Integrity of Embedded Devices},
  doi       = {10.1109/sp40000.2020.00042},
  pages     = {1433--1449},
  publisher = {{IEEE}},
  year      = {2020},
}

@Article{ammar2019s,
  author    = {Ammar, Mahmoud and Crispo, Bruno and Jacobs, Bart and Hughes, Danny and Daniels, Wilfried},
  title     = {{{S\textmu V}}\textemdash{{The}} Security {{MicroVisor}}: {{A}} Formally-Verified Software-Based Security Architecture for the Internet of Things},
  doi       = {10.1109/tdsc.2019.2928541},
  number    = {5},
  pages     = {885--901},
  volume    = {16},
  journal   = {IEEE Transactions on Dependable and Secure Computing},
  publisher = {{IEEE}},
  year      = {2019},
}

@InProceedings{byres2004use,
  author    = {Byres, Eric J and Franz, Matthew and Miller, Darrin},
  booktitle = {Proceedings of the International Infrastructure Survivability Workshop},
  title     = {The Use of Attack Trees in Assessing Vulnerabilities in {{SCADA}} Systems},
  pages     = {3--10},
  publisher = {{Citeseer}},
  keywords  = {⛔ No DOI found},
  year      = {2004},
}

@Misc{7Zip,
  author       = {Pavlov, Igor},
  title        = {7-{{Zip}}},
  url          = {https://www.7-zip.org/},
  urldate      = {2022-10-13},
  lastaccessed = {October 13, 2022},
  year         = {2022},
}

@InProceedings{alder2021aion,
  author    = {Alder, Fritz and Van Bulck, Jo and Piessens, Frank and M\"{u}hlberg, Jan Tobias},
  booktitle = {Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security},
  title     = {Aion: Enabling Open Systems through Strong Availability Guarantees for Enclaves},
  doi       = {10.1145/3460120.3484782},
  isbn      = {9781450384544},
  location  = {Virtual Event, Republic of Korea},
  pages     = {1357–1372},
  publisher = {Association for Computing Machinery},
  series    = {CCS '21},
  abstract  = {Embedded Trusted Execution Environments (TEEs) can provide strong security for software in the IoT or in critical control systems. Approaches to combine this security with real-time and availability guarantees are currently missing. In this paper we present Aion, a configurable security architecture that provides a notion of guaranteed real-time execution for dynamically loaded enclaves. We implement preemptive multitasking and restricted atomicity on top of strong enclave software isolation and attestation. Our approach allows the hardware to enforce confidentiality and integrity protections, while a decoupled small enclaved scheduler software component can enforce availability and guarantee strict deadlines of a bounded number of protected applications, without necessarily introducing a notion of priorities amongst these applications. We implement a prototype on a light-weight TEE processor and provide a case study. Our implementation can guarantee that protected applications can handle interrupts and make progress with deterministic activation latencies, even in the presence of a strong adversary with arbitrary code execution capabilities.},
  address   = {New York, NY, USA},
  keywords  = {availability, open systems, trusted computing, resource sharing},
  numpages  = {16},
  year      = {2021},
}

@Misc{OpenPortableTrusted,
  author       = {{Linaro}},
  title        = {Open {{Portable Trusted Execution Environment}}},
  url          = {https://www.op-tee.org/},
  urldate      = {2022-10-13},
  abstract     = {OP-TEE is an open source project which contains a full implementation to make a complete Trusted Execution Environment. The project has roots in a proprietary solution, initially created by ST-Ericsson and then owned and maintained by STMicroelectronics. In 2014, Linaro started working with STMicroelectronics to transform the proprietary TEE solution into an open source TEE solution instead. In September 2015, the ownership was transferred to Linaro. Today it is one of the key security projects in Linaro, with several of Linaro's members supporting and using it.},
  keywords     = {op-tee},
  langid       = {english},
  lastaccessed = {October 13, 2022},
  year         = {2022},
}

@InProceedings{salehi2020musbs,
  author    = {Majid Salehi and Danny Hughes and Bruno Crispo},
  booktitle = {23rd International Symposium on Research in Attacks, Intrusions and Defenses (RAID 2020)},
  title     = {{\textmu{}SBS}: Static Binary Sanitization of Bare-metal Embedded Devices for Fault Observability},
  isbn      = {978-1-939133-18-2},
  pages     = {381--395},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/raid2020/presentation/salehi},
  address   = {San Sebastian},
  month     = {oct},
  year      = {2020},
}

@InProceedings{hua2017vtz,
  author    = {Zhichao Hua and Jinyu Gu and Yubin Xia and Haibo Chen and Binyu Zang and Haibing Guan},
  booktitle = {26th USENIX Security Symposium (USENIX Security 17)},
  title     = {{vTZ}: Virtualizing {ARM} {TrustZone}},
  isbn      = {978-1-931971-40-9},
  pages     = {541--556},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/hua},
  address   = {Vancouver, BC},
  month     = {aug},
  year      = {2017},
}

@Article{salehi2022discovery,
  author  = {Salehi, Majid and Degani, Luca and Roveri, Marco and Hughes, Danny and Crispo, Bruno},
  title   = {Discovery and Identification of Memory Corruption Vulnerabilities on Bare-Metal Embedded Devices},
  doi     = {10.1109/TDSC.2022.3149371},
  number  = {2},
  pages   = {1124-1138},
  volume  = {20},
  journal = {IEEE Transactions on Dependable and Secure Computing},
  year    = {2023},
}

@Article{noorman2017sancus,
  author    = {Noorman, Job and Bulck, Jo Van and M{\"u}hlberg, Jan Tobias and Piessens, Frank and Maene, Pieter and Preneel, Bart and Verbauwhede, Ingrid and G{\"o}tzfried, Johannes and M{\"u}ller, Tilo and Freiling, Felix},
  title     = {Sancus 2.0: {{A}} Low-Cost Security Architecture for {{IoT}} Devices},
  doi       = {10.1145/3079763},
  number    = {3},
  pages     = {1--33},
  volume    = {20},
  journal   = {ACM Transactions on Privacy and Security (TOPS)},
  publisher = {{ACM New York, NY, USA}},
  year      = {2017},
}

@InProceedings{bahmani2021cure,
  author    = {Raad Bahmani and Ferdinand Brasser and Ghada Dessouky and Patrick Jauernig and Matthias Klimmek and Ahmad-Reza Sadeghi and Emmanuel Stapf},
  booktitle = {30th USENIX Security Symposium (USENIX Security 21)},
  title     = {{CURE}: A Security Architecture with {CUstomizable} and Resilient Enclaves},
  isbn      = {978-1-939133-24-3},
  pages     = {1073--1090},
  publisher = {USENIX Association},
  url       = {https://www.usenix.org/conference/usenixsecurity21/presentation/bahmani},
  month     = aug,
  year      = {2021},
}
